{"ast":null,"code":"import React,{useState,useEffect}from'react';import{BarChart,Bar,XAxis,YAxis,CartesianGrid,Tooltip,Legend,ResponsiveContainer}from'recharts';import{normalizedRegionRatio,regionGroups}from'../data/employmentRegionData';/**\r\n * 지역별 업체 수 시각화 차트 컴포넌트\r\n * - 기타지역 시도별 비율을 막대그래프로 표시\r\n * - 서울특별시, 경기도는 별도 그룹으로 표시하지 않음\r\n * - 모바일 환경에 최적화된 반응형 그래프\r\n */import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const RegionChart=()=>{const[isMobile,setIsMobile]=useState(false);// 모바일 환경 감지\nuseEffect(()=>{const checkIsMobile=()=>{setIsMobile(window.innerWidth<768);};checkIsMobile();window.addEventListener('resize',checkIsMobile);return()=>window.removeEventListener('resize',checkIsMobile);},[]);// 데이터 변환 - 시각화에 적합한 형태로\nconst chartData=normalizedRegionRatio.map(region=>({name:region.시도,비율:region.비율,업체수:region.업체수}));// 모바일에서는 데이터를 일부 필터링하여 주요 지역만 표시 (가독성 향상)\nconst displayData=isMobile?chartData.filter(item=>item.비율>2)// 비율이 2% 이상인 주요 지역만 표시 (더 많은 지역 표시)\n:chartData;return/*#__PURE__*/_jsxs(\"div\",{className:\"region-chart bg-white rounded-lg shadow-md p-4 mb-6\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-xl font-bold mb-2 text-gray-800\",children:\"\\uAE30\\uD0C0\\uC9C0\\uC5ED \\uC2DC\\uB3C4\\uBCC4 \\uBE44\\uC728\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-600 mb-2\",children:\"* \\uC11C\\uC6B8\\uD2B9\\uBCC4\\uC2DC\\uC640 \\uACBD\\uAE30\\uB3C4\\uB97C \\uC81C\\uC678\\uD55C \\uC804\\uAD6D 15\\uAC1C \\uC9C0\\uC5ED\\uC758 \\uC5C5\\uCCB4 \\uBD84\\uD3EC \\uBE44\\uC728 (\\uD569\\uACC4: 100%)\"}),isMobile&&/*#__PURE__*/_jsxs(\"p\",{className:\"text-xs bg-yellow-100 p-2 rounded mb-3\",children:[\"\\uBAA8\\uBC14\\uC77C \\uD658\\uACBD\\uC5D0\\uC11C\\uB294 \\uC8FC\\uC694 \\uC9C0\\uC5ED(\",displayData.length,\"\\uAC1C)\\uB9CC \\uD45C\\uC2DC\\uB429\\uB2C8\\uB2E4.\"]}),/*#__PURE__*/_jsx(\"div\",{className:`${isMobile?'h-72':'h-80'}`,children:/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:\"100%\",children:/*#__PURE__*/_jsxs(BarChart,{data:displayData,margin:isMobile?{top:5,right:10,left:5,bottom:70}:{top:5,right:20,left:10,bottom:70},layout:isMobile?\"vertical\":\"horizontal\"// 모바일에서는 수평 바 차트로 변경\n,children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),isMobile?/*#__PURE__*/// 모바일: 수평 바 차트 (XAxis와 YAxis가 바뀜)\n_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(XAxis,{type:\"number\",tickFormatter:value=>`${value}%`,tick:{fontSize:10}}),/*#__PURE__*/_jsx(YAxis,{type:\"category\",dataKey:\"name\",tick:{fontSize:11},width:80})]}):/*#__PURE__*/// 데스크톱: 수직 바 차트\n_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(XAxis,{dataKey:\"name\",angle:-45,textAnchor:\"end\",height:70,interval:0,tick:{fontSize:11}}),/*#__PURE__*/_jsx(YAxis,{label:{value:'비율 (%)',angle:-90,position:'insideLeft'},tickFormatter:value=>`${value}%`,tick:{fontSize:12}})]}),/*#__PURE__*/_jsx(Tooltip,{formatter:(value,name)=>[`${value}%`,'비율'],labelFormatter:label=>`${label}`}),/*#__PURE__*/_jsx(Legend,{wrapperStyle:isMobile?{fontSize:'10px'}:{}}),/*#__PURE__*/_jsx(Bar,{dataKey:\"\\uBE44\\uC728\",fill:\"#3b82f6\",name:\"\\uC9C0\\uC5ED \\uBE44\\uC728 (%)\"})]})})}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-4\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold mb-2 text-gray-800\",children:\"\\uC9C0\\uC5ED \\uADF8\\uB8F9 \\uC815\\uBCF4\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 sm:grid-cols-2 gap-2\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-50 p-3 rounded\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"font-medium text-gray-700\",children:\"\\uC218\\uB3C4\\uAD8C\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-600\",children:regionGroups.수도권.join(', ')})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-50 p-3 rounded\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"font-medium text-gray-700\",children:\"\\uAE30\\uD0C0\\uC9C0\\uC5ED\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-gray-600\",children:[\"\\uC804\\uCCB4 \",regionGroups.기타지역.length,\"\\uAC1C \\uC9C0\\uC5ED\",isMobile&&` (주요 ${displayData.length}개 표시)`]})]})]})]})]});};export default RegionChart;","map":{"version":3,"names":["React","useState","useEffect","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","normalizedRegionRatio","regionGroups","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","RegionChart","isMobile","setIsMobile","checkIsMobile","window","innerWidth","addEventListener","removeEventListener","chartData","map","region","name","시도","비율","업체수","displayData","filter","item","className","children","length","width","height","data","margin","top","right","left","bottom","layout","strokeDasharray","type","tickFormatter","value","tick","fontSize","dataKey","angle","textAnchor","interval","label","position","formatter","labelFormatter","wrapperStyle","fill","수도권","join","기타지역"],"sources":["D:/Projects/taxcredit_mobileapp/my-app/src/components/RegionChart.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\r\nimport { normalizedRegionRatio, regionGroups } from '../data/employmentRegionData';\r\n\r\n/**\r\n * 지역별 업체 수 시각화 차트 컴포넌트\r\n * - 기타지역 시도별 비율을 막대그래프로 표시\r\n * - 서울특별시, 경기도는 별도 그룹으로 표시하지 않음\r\n * - 모바일 환경에 최적화된 반응형 그래프\r\n */\r\nconst RegionChart = () => {\r\n  const [isMobile, setIsMobile] = useState(false);\r\n  \r\n  // 모바일 환경 감지\r\n  useEffect(() => {\r\n    const checkIsMobile = () => {\r\n      setIsMobile(window.innerWidth < 768);\r\n    };\r\n    \r\n    checkIsMobile();\r\n    window.addEventListener('resize', checkIsMobile);\r\n    \r\n    return () => window.removeEventListener('resize', checkIsMobile);\r\n  }, []);\r\n\r\n  // 데이터 변환 - 시각화에 적합한 형태로\r\n  const chartData = normalizedRegionRatio.map(region => ({\r\n    name: region.시도,\r\n    비율: region.비율,\r\n    업체수: region.업체수\r\n  }));\r\n\r\n  // 모바일에서는 데이터를 일부 필터링하여 주요 지역만 표시 (가독성 향상)\r\n  const displayData = isMobile\r\n    ? chartData.filter(item => item.비율 > 2) // 비율이 2% 이상인 주요 지역만 표시 (더 많은 지역 표시)\r\n    : chartData;\r\n\r\n  return (\r\n    <div className=\"region-chart bg-white rounded-lg shadow-md p-4 mb-6\">\r\n      <h2 className=\"text-xl font-bold mb-2 text-gray-800\">기타지역 시도별 비율</h2>\r\n      <p className=\"text-sm text-gray-600 mb-2\">\r\n        * 서울특별시와 경기도를 제외한 전국 15개 지역의 업체 분포 비율 (합계: 100%)\r\n      </p>\r\n      \r\n      {isMobile && (\r\n        <p className=\"text-xs bg-yellow-100 p-2 rounded mb-3\">\r\n          모바일 환경에서는 주요 지역({displayData.length}개)만 표시됩니다.\r\n        </p>\r\n      )}\r\n      \r\n      <div className={`${isMobile ? 'h-72' : 'h-80'}`}>\r\n        <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n          <BarChart\r\n            data={displayData}\r\n            margin={isMobile \r\n              ? { top: 5, right: 10, left: 5, bottom: 70 } \r\n              : { top: 5, right: 20, left: 10, bottom: 70 }\r\n            }\r\n            layout={isMobile ? \"vertical\" : \"horizontal\"} // 모바일에서는 수평 바 차트로 변경\r\n          >\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            {isMobile ? (\r\n              // 모바일: 수평 바 차트 (XAxis와 YAxis가 바뀜)\r\n              <>\r\n                <XAxis \r\n                  type=\"number\" \r\n                  tickFormatter={(value) => `${value}%`}\r\n                  tick={{ fontSize: 10 }}\r\n                />\r\n                <YAxis \r\n                  type=\"category\"\r\n                  dataKey=\"name\" \r\n                  tick={{ fontSize: 11 }}\r\n                  width={80}\r\n                />\r\n              </>\r\n            ) : (\r\n              // 데스크톱: 수직 바 차트\r\n              <>\r\n                <XAxis \r\n                  dataKey=\"name\" \r\n                  angle={-45} \r\n                  textAnchor=\"end\" \r\n                  height={70}\r\n                  interval={0}\r\n                  tick={{ fontSize: 11 }}\r\n                />\r\n                <YAxis \r\n                  label={{ value: '비율 (%)', angle: -90, position: 'insideLeft' }}\r\n                  tickFormatter={(value) => `${value}%`}\r\n                  tick={{ fontSize: 12 }}\r\n                />\r\n              </>\r\n            )}\r\n            <Tooltip \r\n              formatter={(value, name) => [`${value}%`, '비율']}\r\n              labelFormatter={(label) => `${label}`}\r\n            />\r\n            <Legend wrapperStyle={isMobile ? { fontSize: '10px' } : {}} />\r\n            <Bar dataKey=\"비율\" fill=\"#3b82f6\" name=\"지역 비율 (%)\" />\r\n          </BarChart>\r\n        </ResponsiveContainer>\r\n      </div>\r\n      \r\n      <div className=\"mt-4\">\r\n        <h3 className=\"text-lg font-semibold mb-2 text-gray-800\">지역 그룹 정보</h3>\r\n        <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-2\">\r\n          <div className=\"bg-gray-50 p-3 rounded\">\r\n            <h4 className=\"font-medium text-gray-700\">수도권</h4>\r\n            <p className=\"text-sm text-gray-600\">\r\n              {regionGroups.수도권.join(', ')}\r\n            </p>\r\n          </div>\r\n          <div className=\"bg-gray-50 p-3 rounded\">\r\n            <h4 className=\"font-medium text-gray-700\">기타지역</h4>\r\n            <p className=\"text-sm text-gray-600\">\r\n              전체 {regionGroups.기타지역.length}개 지역\r\n              {isMobile && ` (주요 ${displayData.length}개 표시)`}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegionChart; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}