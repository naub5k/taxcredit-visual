{"ast":null,"code":"import React,{useState,useEffect}from'react';import{employmentRegionData}from'../data/employmentRegionData';/**\n * 시도/구군 선택 컴포넌트\n * - 드롭다운 방식으로 시도 선택 시 해당 구군 목록을 로드\n * - 선택된 지역의 업체 수를 표시\n * - 초기 로딩 시 기본 데이터를 렌더링\n * - 모바일 최적화 UI 적용\n */import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const RegionSelector=_ref=>{let{onRegionChange}=_ref;// 상태 관리\nconst[selectedState,setSelectedState]=useState('');const[selectedDistrict,setSelectedDistrict]=useState('');const[districtList,setDistrictList]=useState([]);const[selectedCompanyCount,setSelectedCompanyCount]=useState(0);const[stateCompanyCount,setStateCompanyCount]=useState(0);const[isMobile,setIsMobile]=useState(false);// 모바일 환경 감지\nuseEffect(()=>{const checkIsMobile=()=>{setIsMobile(window.innerWidth<768);};checkIsMobile();window.addEventListener('resize',checkIsMobile);return()=>window.removeEventListener('resize',checkIsMobile);},[]);// 시도 선택 시 구군 목록 업데이트\nuseEffect(()=>{if(selectedState){const stateData=employmentRegionData.find(item=>item.시도===selectedState);if(stateData){// 구군 목록 업데이트 (업체수 기준 내림차순 정렬)\nsetDistrictList(stateData.구군목록.sort((a,b)=>b.업체수-a.업체수));// 시도 전체 업체수 설정\nsetStateCompanyCount(stateData.업체수);// 선택된 구군 초기화\nsetSelectedDistrict('');setSelectedCompanyCount(0);}}else{setDistrictList([]);setStateCompanyCount(0);setSelectedDistrict('');setSelectedCompanyCount(0);}},[selectedState]);// 구군 선택 시 업체 수 업데이트\nuseEffect(()=>{if(selectedDistrict&&districtList.length>0){const districtData=districtList.find(item=>item.구군===selectedDistrict);if(districtData){setSelectedCompanyCount(districtData.업체수);// 상위 컴포넌트에 선택된 지역 정보 전달 (있는 경우)\nif(onRegionChange){onRegionChange({시도:selectedState,구군:selectedDistrict,업체수:districtData.업체수,시도업체수:stateCompanyCount});}}}else{setSelectedCompanyCount(0);}},[selectedDistrict,districtList,stateCompanyCount,selectedState,onRegionChange]);// 시도 선택 핸들러\nconst handleStateChange=e=>{setSelectedState(e.target.value);};// 구군 선택 핸들러\nconst handleDistrictChange=e=>{setSelectedDistrict(e.target.value);};// 시도 업체 비율 계산 (선택된 구군 / 시도 전체)\nconst calculateRatio=()=>{if(selectedCompanyCount>0&&stateCompanyCount>0){return(selectedCompanyCount/stateCompanyCount*100).toFixed(2);}return 0;};return/*#__PURE__*/_jsxs(\"div\",{className:\"region-selector bg-white rounded-lg shadow-md p-4 mb-6\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-xl font-bold mb-4 text-gray-800\",children:\"\\uC9C0\\uC5ED\\uBCC4 \\uACE0\\uC6A9\\uC774\\uB825 \\uD604\\uD669\"}),/*#__PURE__*/_jsxs(\"div\",{className:`${isMobile?'flex flex-col':'grid grid-cols-2 gap-4'}`,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"state-select\",className:\"block text-gray-700 font-medium mb-2\",children:\"\\uC2DC/\\uB3C4 \\uC120\\uD0DD\"}),/*#__PURE__*/_jsxs(\"select\",{id:\"state-select\",className:\"w-full p-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-blue-500\",value:selectedState,onChange:handleStateChange,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"\\uC120\\uD0DD\\uD558\\uC138\\uC694\"}),employmentRegionData.map(state=>/*#__PURE__*/_jsxs(\"option\",{value:state.시도,children:[state.시도,\" (\",state.업체수.toLocaleString(),\"\\uAC1C)\"]},state.시도))]})]}),selectedState&&/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"district-select\",className:\"block text-gray-700 font-medium mb-2\",children:\"\\uAD6C/\\uAD70 \\uC120\\uD0DD\"}),/*#__PURE__*/_jsxs(\"select\",{id:\"district-select\",className:\"w-full p-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-blue-500\",value:selectedDistrict,onChange:handleDistrictChange,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"\\uC804\\uCCB4\"}),districtList.map(district=>/*#__PURE__*/_jsxs(\"option\",{value:district.구군,children:[district.구군,\" (\",district.업체수.toLocaleString(),\"\\uAC1C)\"]},district.구군))]})]})]}),selectedState&&/*#__PURE__*/_jsxs(\"div\",{className:\"mt-6 bg-gray-50 p-4 rounded-lg\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold mb-2 text-gray-800\",children:\"\\uC120\\uD0DD\\uB41C \\uC9C0\\uC5ED \\uC815\\uBCF4\"}),/*#__PURE__*/_jsxs(\"div\",{className:`${isMobile?'grid grid-cols-1 gap-3':'grid grid-cols-2 gap-4'}`,children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-600\",children:\"\\uC2DC/\\uB3C4:\"}),/*#__PURE__*/_jsx(\"p\",{className:\"font-medium\",children:selectedState})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-600\",children:\"\\uC804\\uCCB4 \\uC5C5\\uCCB4 \\uC218:\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"font-medium\",children:[stateCompanyCount.toLocaleString(),\"\\uAC1C\"]})]}),selectedDistrict&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-600\",children:\"\\uC120\\uD0DD\\uB41C \\uAD6C/\\uAD70:\"}),/*#__PURE__*/_jsx(\"p\",{className:\"font-medium\",children:selectedDistrict})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-600\",children:\"\\uD574\\uB2F9 \\uAD6C/\\uAD70 \\uC5C5\\uCCB4 \\uC218:\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"font-medium\",children:[selectedCompanyCount.toLocaleString(),\"\\uAC1C\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:isMobile?\"col-span-1\":\"col-span-2\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-600\",children:\"\\uBE44\\uC728:\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"font-medium\",children:[calculateRatio(),\"%\"]})]})]})]})]}),selectedDistrict&&/*#__PURE__*/_jsxs(\"div\",{className:\"mt-4\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-full bg-gray-200 rounded-full h-4\",children:/*#__PURE__*/_jsx(\"div\",{className:\"bg-blue-600 h-4 rounded-full\",style:{width:`${calculateRatio()}%`}})}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-gray-600 mt-1\",children:[selectedDistrict,\"\\uC758 \",selectedState,\" \\uB0B4 \\uBE44\\uC728: \",calculateRatio(),\"%\"]})]})]});};export default RegionSelector;","map":{"version":3,"names":["React","useState","useEffect","employmentRegionData","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","RegionSelector","_ref","onRegionChange","selectedState","setSelectedState","selectedDistrict","setSelectedDistrict","districtList","setDistrictList","selectedCompanyCount","setSelectedCompanyCount","stateCompanyCount","setStateCompanyCount","isMobile","setIsMobile","checkIsMobile","window","innerWidth","addEventListener","removeEventListener","stateData","find","item","시도","구군목록","sort","a","b","업체수","length","districtData","구군","시도업체수","handleStateChange","e","target","value","handleDistrictChange","calculateRatio","toFixed","className","children","htmlFor","id","onChange","map","state","toLocaleString","district","style","width"],"sources":["D:/Projects/taxcredit_mobileapp/my-app/src/components/RegionSelector.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { employmentRegionData } from '../data/employmentRegionData';\n\n/**\n * 시도/구군 선택 컴포넌트\n * - 드롭다운 방식으로 시도 선택 시 해당 구군 목록을 로드\n * - 선택된 지역의 업체 수를 표시\n * - 초기 로딩 시 기본 데이터를 렌더링\n * - 모바일 최적화 UI 적용\n */\nconst RegionSelector = ({ onRegionChange }) => {\n  // 상태 관리\n  const [selectedState, setSelectedState] = useState('');\n  const [selectedDistrict, setSelectedDistrict] = useState('');\n  const [districtList, setDistrictList] = useState([]);\n  const [selectedCompanyCount, setSelectedCompanyCount] = useState(0);\n  const [stateCompanyCount, setStateCompanyCount] = useState(0);\n  const [isMobile, setIsMobile] = useState(false);\n\n  // 모바일 환경 감지\n  useEffect(() => {\n    const checkIsMobile = () => {\n      setIsMobile(window.innerWidth < 768);\n    };\n    \n    checkIsMobile();\n    window.addEventListener('resize', checkIsMobile);\n    \n    return () => window.removeEventListener('resize', checkIsMobile);\n  }, []);\n\n  // 시도 선택 시 구군 목록 업데이트\n  useEffect(() => {\n    if (selectedState) {\n      const stateData = employmentRegionData.find(item => item.시도 === selectedState);\n      if (stateData) {\n        // 구군 목록 업데이트 (업체수 기준 내림차순 정렬)\n        setDistrictList(stateData.구군목록.sort((a, b) => b.업체수 - a.업체수));\n        // 시도 전체 업체수 설정\n        setStateCompanyCount(stateData.업체수);\n        // 선택된 구군 초기화\n        setSelectedDistrict('');\n        setSelectedCompanyCount(0);\n      }\n    } else {\n      setDistrictList([]);\n      setStateCompanyCount(0);\n      setSelectedDistrict('');\n      setSelectedCompanyCount(0);\n    }\n  }, [selectedState]);\n\n  // 구군 선택 시 업체 수 업데이트\n  useEffect(() => {\n    if (selectedDistrict && districtList.length > 0) {\n      const districtData = districtList.find(item => item.구군 === selectedDistrict);\n      if (districtData) {\n        setSelectedCompanyCount(districtData.업체수);\n        \n        // 상위 컴포넌트에 선택된 지역 정보 전달 (있는 경우)\n        if (onRegionChange) {\n          onRegionChange({\n            시도: selectedState,\n            구군: selectedDistrict,\n            업체수: districtData.업체수,\n            시도업체수: stateCompanyCount\n          });\n        }\n      }\n    } else {\n      setSelectedCompanyCount(0);\n    }\n  }, [selectedDistrict, districtList, stateCompanyCount, selectedState, onRegionChange]);\n\n  // 시도 선택 핸들러\n  const handleStateChange = (e) => {\n    setSelectedState(e.target.value);\n  };\n\n  // 구군 선택 핸들러\n  const handleDistrictChange = (e) => {\n    setSelectedDistrict(e.target.value);\n  };\n\n  // 시도 업체 비율 계산 (선택된 구군 / 시도 전체)\n  const calculateRatio = () => {\n    if (selectedCompanyCount > 0 && stateCompanyCount > 0) {\n      return ((selectedCompanyCount / stateCompanyCount) * 100).toFixed(2);\n    }\n    return 0;\n  };\n\n  return (\n    <div className=\"region-selector bg-white rounded-lg shadow-md p-4 mb-6\">\n      <h2 className=\"text-xl font-bold mb-4 text-gray-800\">지역별 고용이력 현황</h2>\n      \n      {/* 시도/구군 선택 영역 */}\n      <div className={`${isMobile ? 'flex flex-col' : 'grid grid-cols-2 gap-4'}`}>\n        {/* 시도 선택 */}\n        <div className=\"mb-4\">\n          <label htmlFor=\"state-select\" className=\"block text-gray-700 font-medium mb-2\">\n            시/도 선택\n          </label>\n          <select\n            id=\"state-select\"\n            className=\"w-full p-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            value={selectedState}\n            onChange={handleStateChange}\n          >\n            <option value=\"\">선택하세요</option>\n            {employmentRegionData.map(state => (\n              <option key={state.시도} value={state.시도}>\n                {state.시도} ({state.업체수.toLocaleString()}개)\n              </option>\n            ))}\n          </select>\n        </div>\n\n        {/* 구군 선택 (시도 선택 시에만 표시) */}\n        {selectedState && (\n          <div className=\"mb-4\">\n            <label htmlFor=\"district-select\" className=\"block text-gray-700 font-medium mb-2\">\n              구/군 선택\n            </label>\n            <select\n              id=\"district-select\"\n              className=\"w-full p-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              value={selectedDistrict}\n              onChange={handleDistrictChange}\n            >\n              <option value=\"\">전체</option>\n              {districtList.map(district => (\n                <option key={district.구군} value={district.구군}>\n                  {district.구군} ({district.업체수.toLocaleString()}개)\n                </option>\n              ))}\n            </select>\n          </div>\n        )}\n      </div>\n\n      {/* 선택된 지역 정보 표시 */}\n      {selectedState && (\n        <div className=\"mt-6 bg-gray-50 p-4 rounded-lg\">\n          <h3 className=\"text-lg font-semibold mb-2 text-gray-800\">선택된 지역 정보</h3>\n          <div className={`${isMobile ? 'grid grid-cols-1 gap-3' : 'grid grid-cols-2 gap-4'}`}>\n            <div>\n              <p className=\"text-gray-600\">시/도:</p>\n              <p className=\"font-medium\">{selectedState}</p>\n            </div>\n            <div>\n              <p className=\"text-gray-600\">전체 업체 수:</p>\n              <p className=\"font-medium\">{stateCompanyCount.toLocaleString()}개</p>\n            </div>\n            {selectedDistrict && (\n              <>\n                <div>\n                  <p className=\"text-gray-600\">선택된 구/군:</p>\n                  <p className=\"font-medium\">{selectedDistrict}</p>\n                </div>\n                <div>\n                  <p className=\"text-gray-600\">해당 구/군 업체 수:</p>\n                  <p className=\"font-medium\">{selectedCompanyCount.toLocaleString()}개</p>\n                </div>\n                <div className={isMobile ? \"col-span-1\" : \"col-span-2\"}>\n                  <p className=\"text-gray-600\">비율:</p>\n                  <p className=\"font-medium\">{calculateRatio()}%</p>\n                </div>\n              </>\n            )}\n          </div>\n        </div>\n      )}\n\n      {/* 비주얼 인디케이터 */}\n      {selectedDistrict && (\n        <div className=\"mt-4\">\n          <div className=\"w-full bg-gray-200 rounded-full h-4\">\n            <div \n              className=\"bg-blue-600 h-4 rounded-full\" \n              style={{ width: `${calculateRatio()}%` }}\n            ></div>\n          </div>\n          <p className=\"text-sm text-gray-600 mt-1\">\n            {selectedDistrict}의 {selectedState} 내 비율: {calculateRatio()}%\n          </p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default RegionSelector;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}